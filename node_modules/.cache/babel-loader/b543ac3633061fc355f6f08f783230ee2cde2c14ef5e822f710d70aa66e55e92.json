{"ast":null,"code":"import { ADD_LIST, SET_LIST } from \"./types\";\nconst initialState = {\n  midAreaLists: [{\n    id: \"midAreaList-0\",\n    comps: [\"MOVE\"]\n  }]\n};\nexport const listReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex(x => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n      return {\n        midAreaLists: all_lists\n      };\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"]\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ADD_LIST","SET_LIST","initialState","midAreaLists","id","comps","listReducer","state","arguments","length","undefined","action","type","index","findIndex","x","all_lists","item","splice","list","old_list","new_list_add","push"],"sources":["/Users/shipra/Work/NewScratchReact/mit-scratch-react/src/redux/midarea/list.js"],"sourcesContent":["import { ADD_LIST, SET_LIST } from \"./types\";\n\nconst initialState = {\n  midAreaLists: [\n    {\n      id: \"midAreaList-0\",\n      comps: [\"MOVE\"],\n    },\n  ],\n};\n\nexport const listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex((x) => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n\n      return {\n        midAreaLists: all_lists,\n      };\n\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"],\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list,\n      };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,SAAS;AAE5C,MAAMC,YAAY,GAAG;EACnBC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAE,eAAe;IACnBC,KAAK,EAAE,CAAC,MAAM;EAChB,CAAC;AAEL,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,YAAY;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKX,QAAQ;MACX,IAAIY,KAAK,GAAGN,KAAK,CAACJ,YAAY,CAACW,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACX,EAAE,KAAKO,MAAM,CAACP,EAAE,CAAC;MACnE,IAAIY,SAAS,GAAGT,KAAK,CAACJ,YAAY;MAClC,IAAI,CAACc,IAAI,CAAC,GAAGD,SAAS,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MACvCI,IAAI,CAACZ,KAAK,GAAGM,MAAM,CAACQ,IAAI;MACxBH,SAAS,CAACE,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEI,IAAI,CAAC;MAEhC,OAAO;QACLd,YAAY,EAAEa;MAChB,CAAC;IAEH,KAAKhB,QAAQ;MACX,IAAIoB,QAAQ,GAAGb,KAAK,CAACJ,YAAY;MACjC,IAAIkB,YAAY,GAAG;QACjBjB,EAAE,EAAG,eAAcG,KAAK,CAACJ,YAAY,CAACM,MAAO,EAAC;QAC9CJ,KAAK,EAAE,CAAC,MAAM;MAChB,CAAC;MACDe,QAAQ,CAACE,IAAI,CAACD,YAAY,CAAC;MAC3B,OAAO;QACLlB,YAAY,EAAEiB;MAChB,CAAC;IAEH;MACE,OAAOb,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}