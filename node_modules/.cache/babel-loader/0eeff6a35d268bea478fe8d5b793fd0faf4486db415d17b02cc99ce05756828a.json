{"ast":null,"code":"import _slicedToArray from\"/Users/shipra/Work/CheckForBuild/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{ADD_LIST,SET_LIST}from\"./types\";var initialState={midAreaLists:[{id:\"midAreaList-0\",comps:[\"MOVE\"]}]};export var listReducer=function listReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_LIST:var index=state.midAreaLists.findIndex(function(x){return x.id===action.id;});var all_lists=state.midAreaLists;var _all_lists$splice=all_lists.splice(index,1),_all_lists$splice2=_slicedToArray(_all_lists$splice,1),item=_all_lists$splice2[0];item.comps=action.list;all_lists.splice(index,0,item);return{midAreaLists:all_lists};case ADD_LIST:var old_list=state.midAreaLists;var new_list_add={id:\"midAreaList-\".concat(state.midAreaLists.length),comps:[\"MOVE\"]};old_list.push(new_list_add);return{midAreaLists:old_list};default:return state;}};","map":{"version":3,"names":["ADD_LIST","SET_LIST","initialState","midAreaLists","id","comps","listReducer","state","arguments","length","undefined","action","type","index","findIndex","x","all_lists","_all_lists$splice","splice","_all_lists$splice2","_slicedToArray","item","list","old_list","new_list_add","concat","push"],"sources":["/Users/shipra/Work/CheckForBuild/my-app/src/redux/midarea/list.js"],"sourcesContent":["import { ADD_LIST, SET_LIST } from \"./types\";\n\nconst initialState = {\n  midAreaLists: [\n    {\n      id: \"midAreaList-0\",\n      comps: [\"MOVE\"],\n    },\n  ],\n};\n\nexport const listReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LIST:\n      let index = state.midAreaLists.findIndex((x) => x.id === action.id);\n      let all_lists = state.midAreaLists;\n      let [item] = all_lists.splice(index, 1);\n      item.comps = action.list;\n      all_lists.splice(index, 0, item);\n\n      return {\n        midAreaLists: all_lists,\n      };\n\n    case ADD_LIST:\n      let old_list = state.midAreaLists;\n      let new_list_add = {\n        id: `midAreaList-${state.midAreaLists.length}`,\n        comps: [\"MOVE\"],\n      };\n      old_list.push(new_list_add);\n      return {\n        midAreaLists: old_list,\n      };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"6HAAA,OAASA,QAAQ,CAAEC,QAAQ,KAAQ,SAAS,CAE5C,GAAM,CAAAC,YAAY,CAAG,CACnBC,YAAY,CAAE,CACZ,CACEC,EAAE,CAAE,eAAe,CACnBC,KAAK,CAAE,CAAC,MAAM,CAChB,CAAC,CAEL,CAAC,CAED,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAqC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,YAAY,IAAE,CAAAS,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACtD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,CAAAX,QAAQ,CACX,GAAI,CAAAY,KAAK,CAAGN,KAAK,CAACJ,YAAY,CAACW,SAAS,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACX,EAAE,GAAKO,MAAM,CAACP,EAAE,GAAC,CACnE,GAAI,CAAAY,SAAS,CAAGT,KAAK,CAACJ,YAAY,CAClC,IAAAc,iBAAA,CAAaD,SAAS,CAACE,MAAM,CAACL,KAAK,CAAE,CAAC,CAAC,CAAAM,kBAAA,CAAAC,cAAA,CAAAH,iBAAA,IAAlCI,IAAI,CAAAF,kBAAA,IACTE,IAAI,CAAChB,KAAK,CAAGM,MAAM,CAACW,IAAI,CACxBN,SAAS,CAACE,MAAM,CAACL,KAAK,CAAE,CAAC,CAAEQ,IAAI,CAAC,CAEhC,MAAO,CACLlB,YAAY,CAAEa,SAChB,CAAC,CAEH,IAAK,CAAAhB,QAAQ,CACX,GAAI,CAAAuB,QAAQ,CAAGhB,KAAK,CAACJ,YAAY,CACjC,GAAI,CAAAqB,YAAY,CAAG,CACjBpB,EAAE,gBAAAqB,MAAA,CAAiBlB,KAAK,CAACJ,YAAY,CAACM,MAAM,CAAE,CAC9CJ,KAAK,CAAE,CAAC,MAAM,CAChB,CAAC,CACDkB,QAAQ,CAACG,IAAI,CAACF,YAAY,CAAC,CAC3B,MAAO,CACLrB,YAAY,CAAEoB,QAChB,CAAC,CAEH,QACE,MAAO,CAAAhB,KAAK,CAChB,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}